---
marp: true
theme: uncover
style: |
  .columns {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    align-items: center;
    gap: 1rem;
  }
math: mathjax
---
<!-- class: invert -->
<style>
section ul li[data-bespoke-marp-fragment=inactive] {
    visibility: visible;
    opacity: .1;
}
section ul li[data-bespoke-marp-fragment=active] ul li[data-bespoke-marp-fragment=active] {
    visibility: visible;
    opacity: 1;
}
section ul li[data-bespoke-marp-fragment=active] ul li[data-bespoke-marp-fragment=inactive] {
    visibility: visible;
    opacity: .1;
}
section ul li[data-bespoke-marp-fragment=inactive] ul li[data-bespoke-marp-fragment=inactive] {
    visibility: visible;
    opacity: 1;
}
</style>
# Lesson 4

---

## Overview meetings
- [Lesson 1](./slides/1.html)
  - 👨‍🏫 What are quantum computers?
  - 🎯 Where are we going?
  - 🔍 Play as a learning mechanism
  - 🎲 Play with Quantum Inspire be inspired
- Guest lecture TNO: [Lesson 2](./slides/2a.pdf) en [meer](./slides/2b.pdf)
- [Lesson 3](./slides/2.html)
  - 🔢 Mathematical formalism
  - 🔒 Quantum Key Distribution
  - ⏛ Quantum circuits
  - 🔍 Grover
- 🏠 Build your own quantum computer simulator?
- [Lesson 4](./slides/4.html): 👨‍💻 Quantum Algoritms
- Lesson 5: 🎮 Games
- Lesson 6: 🕹️ Quantum Games
- 🏗️ At work: programming the games!
- 👩‍🏫 Project presentations
  - At TNO
  - At Quantum Meets
  - Etc.
- Further development?

---

## Today

* 🔁 herhaling: quantum teleportation
* 🔁 herhaling: quantum key distribution
* 🔁 herhaling: Grover's algorithm
* Deutsch-Jozsa algorithm
* Simon's algorithm
* Shor's algorithm
* Quantum neural networks
* Quantum error correction
* 🏋️‍♂️ Exercise

---

## Quantum simulator assignment

👀 Who tried? 👀

---

## Deutsch-Jozsa algorithm

* 💪 First proof of quantum advantage. 
  * Shor's algorithm possibly proofs that too. 
* Not have a lot of applications (yet). 
* Problem: 
  * Situation: $f$ mapt $n$ bits to 1 bit and is
    * Balanced (equally often 0 and 1), or
    * Constant (always 0 or always 1)
  * Question: is $f$ balanced or constant?

---

### Example balanced function ⚖️

 Input-bit 1  | Input-bit 2   | Output-bit   
-------|------|------
0|0|0
0|1|1
1|0|1
1|1|0

---

### The problem

 Input-bit 1  | Input-bit 2   | Output-bit   
-------|------|------
0|0|❓
0|1|❓
1|0|❓
1|1|❓  

---

### Solution classical 🏛️
```java
public static int n = 9;
public static boolean f(boolean input[]) { return input[0]; }
public static boolean isConstant() {
  boolean first = true;
  boolean last = false;
  boolean[] booleans = new boolean[] { false, true };
  for (boolean i1: booleans)
    for (boolean i2: booleans)
             ⋮      ⋮      ⋮
        for (boolean i9: booleans) {
          boolean value = f(new boolean[] { i1, i2, ⋯, i9 });
          if (first) first = false;
          else if (value != last) return false;
          last = value;
        }
  return true;
}
```

---

### Solution classical 🏛️: performance ⏱️
* worst-case $\mathcal{O}(2^{n-1}+1)$
  * 👎 "many times" calling $f$
* probability $f$ is constant: $1-\frac{1}{2^{k-1}}$

---

### The solution quantum
* ⏱️ efficiency: a single call to $f$
* if result is $0$ then $f$ is constant
  * else $f$ is balanced

![width:800](./dj.png)

---

### The solution quantum: the check
* After $H^{\otimes n}$: $\frac{1}{\sqrt{2^{n+1}}}\sum_{x=0}^{2^n-1} |x\rangle (|0\rangle - |1\rangle )$
* After Oracle: $\frac{1}{\sqrt{2^{n+1}}}\sum_{x=0}^{2^n-1} |x\rangle (|0\oplus f(x)\rangle - |1\oplus f(x)\rangle )$
* In other words: $\frac{1}{\sqrt{2^{n+1}}}\sum_{x=0}^{2^n-1} (-1)^{f(x)} |x\rangle (|0\rangle - |1\rangle )$.
* Discard garbage: $\frac{1}{\sqrt{2^{n}}}\sum_{x=0}^{2^n-1} (-1)^{f(x)} |x\rangle$.
* $H^{\otimes n} |k\rangle = \frac{1}{\sqrt{2^n}} \sum_{j = 0}^{2^n - 1} (-1)^{k \cdot j} |j\rangle$
* After $H^{\otimes n}$: $\frac{1}{\sqrt{2^n}}\sum_{x=0}^{2^n-1}(-1)^{f(x)} \left[ \frac{1}{\sqrt{2^n}} \sum_{y=0}^{2^n-1}(-1)^{x\cdot y}  |y\rangle \right]$
* In other words: $\sum_{y=0}^{2^n-1} \left[ \frac{1}{2^n} \sum_{x=0}^{2^n-1}(-1)^{f(x)} (-1)^{x\cdot y}\right] |y\rangle$
* For $y=0$ there is $\left|\frac{1}{2^n} \sum_{x=0}^{2^n-1}(-1)^{f(x)}\right|^2$

---

### The solution quantum: interference

* Probability on $\ket{0}^{\otimes n}$ is $\left|\frac{1}{2^n} \sum_{x=0}^{2^n-1}(-1)^{f(x)}\right|^2$
* If $f$ constant, then *constructive interference*. 
* If *f* balanced, then *destructive interference*. 
* If $\ket{0}^{\otimes n}$ measured, then (and only then) is $f$ constant. 

---

## Vandaag

* ~~🔁 herhaling: quantum teleportation~~
* ~~🔁 herhaling: quantum key distribution~~
* ~~🔁 herhaling: Grover's algorithm~~
* ~~Deutsch-Jozsa algorithm~~
* Simon's algorithm
* Shor's algorithm
* Quantum neural networks
* Quantum error correction
* 🏋️‍♂️ Exercise

---

### Simon's algorithm
* Problem:
  * Situation: there is a secret $n$ bit string $s$ so that: $f(x)=f(y)$ if and only if $x\oplus y=s$. 
  * Question: what is $s$?

---

### Simon's algorithm: example

x | f(x)
--|------
000	| 101
001	| 010
010	| 000
011	| 110
100	| 000
101	| 110
110	| 101
111	| 010

---

### Simon's algorithm: classical

* search two equal outcomes
* approximately $\sqrt{2^n}$ times trying
  * this is the [birthday paradox](https://en.wikipedia.org/wiki/Birthday_problem) (important for [hashing](https://justcryptography.com/the-birthday-paradox/))

---

### Simon's algorithm: quantum

Two steps: 
1) approximately $\mathcal{O}(n)$ times a quantum circuit, with one $f$
2) classical: gaussian elimination

---

## Vandaag

* ~~🔁 herhaling: quantum teleportation~~
* ~~🔁 herhaling: quantum key distribution~~
* ~~🔁 herhaling: Grover's algorithm~~
* ~~Deutsch-Jozsa algorithm~~
* ~~Simon's algorithm~~
* Shor's algorithm
* Quantum neural networks
* Quantum error correction
* 🏋️‍♂️ Exercise
---

### Shor's algorithm

* break RSA
  * (for AES we have $\sqrt{}$ gain using Grover)
* Algorithm exists of two parts
  * Classical: clever trick
  * Quantum: Fourier transform

---

### RSA

* Private key: two prime numbers $p$ and $q$.
* Public key: the product $pq=n$ and an $m$ such that $\gcd{((p-1)(q-1),m)}=1$.
* Bob versleutelt $d$ using $e=d^m\bmod n$.
* Alice can easily find $d$ back. 
* We will break RSA by doing priemfactorisation clever. 

---

### Priemfactorisation ➡️ find period

* Choose a number $a$ smaller then $n$
* Determine $r$ such that $a^r=kn+1$ (quantum!)
* Restart if $r$ is odd (small probability)
* Do maths to find $p$ and $q$: 
  * $a^r-1=kqp$
  * $(a^{r/2}-1)(a^{r/2}+1)=kqp$
  * $p$ divides $a^{r/2}-1$ and $q$ divides $a^{r/2}+1$
  * $p=\gcd{(a^{r/2}-1,n)}$ and $q=\gcd{(a^{r/2}+1,n)}$

---

### Shor: the quantum part

* Make (again) a mega-superposition
* Execute the quantum Fourier Transform
  * Destructive and constructive interference 
* Measure

---

### Fourier transformation: application

* `.BMP` vs. `.JPEG`, `.WAV` vs `.MP3`
* What information can we leave out?
  * A part of the photo? Not really...
* Do not view a photo as 
  * parts *next to each other*: ![height:1em](./fourier1.svg)
  * but as parts *on each other*: ![height:1em](./fourier2.svg)
* [2-dimensional](https://www.dspguide.com/graphics/F_27_10.gif) is complicated...

---

### Fourier transform: intuition

![height:100%](./fourier2d.png)

---

### Fourier transform: more intuition

See [Youtube](https://www.youtube.com/watch?v=mgXSevZmjPc). 

---

### Complexe numbers

* Two representations: 
  * $x+yi$
  * $r e^{i\phi}$ with radius $r$ and angle $\phi$ in radians
    * $\phi$ between $0$ and $2\pi$
* Rules: 
  * $x+yi$
    * Addition and substraction easy
    * Multiplication, remember $i^2=-1$
  * $r e^{i\phi}$
    * Multiplication easy
    * Addition and substraction difficult

---

### Discrete Fourier transform

$$\sum\limits_{n=0}^{N-1}x_n\ket{n}\mapsto\sum\limits_{n=0}^{N-1}\left(\frac{1}{\sqrt{N}}\sum\limits_{m=0}^{N-1}x_m e^{2\pi\frac{nm}{N}}\right)\ket{n}$$

Very difficult, but a view things can be noticed: 
* Linear and invertible, so quantum operation is possible
* A lot of complex numbers are being added. Is there possibly any constructive interference?

---

## Vandaag

* ~~🔁 herhaling: quantum teleportation~~
* ~~🔁 herhaling: quantum key distribution~~
* ~~🔁 herhaling: Grover's algorithm~~
* ~~Deutsch-Jozsa algorithm~~
* ~~Simon's algorithm~~
* ~~Shor's algorithm~~
* Quantum neural networks
* Quantum error correction

---

## Quantum Machine Learning Algorithms

* Diverse applications in *Machine Learning*
* 🧠 *Neural networks*: 
  * To efficiently find coefficients
  * To introduce more degrees of freedom

---

## Vandaag

* ~~🔁 herhaling: quantum teleportation~~
* ~~🔁 herhaling: quantum key distribution~~
* ~~🔁 herhaling: Grover's algorithm~~
* ~~Deutsch-Jozsa algorithm~~
* ~~Simon's algorithm~~
* ~~Shor's algorithm~~
* ~~Quantum neural networks~~
* Quantum error correction

---

## Quantum Error Correction

* There is a lot of *noise*
* Save logical qubits in multiple physical qubits
* Classical error correction is used in internet traffic, CPU's, compression, etc.

---

### Classical Error Correction

* a $[n,k]$ code encodes $k$ bits in $n$ bits
* $n\times k$ *generator matrix* $G$ mapt from $x$ to $y$: $y=Gx$
* example: repetition $[3,1]$ code $G=\left[\begin{smallmatrix}1\\1\\1\end{smallmatrix}\right]$
* *parity check matrix*: $n-k=2$ vectors orthogonal on $G^T$. Example: $H=\left[\begin{smallmatrix}1&1&0\\0&1&1\end{smallmatrix}\right]$
* if $Hx=0$, then $x=\left[\begin{smallmatrix}1\\1\\1\end{smallmatrix}\right]$ or $x=\left[\begin{smallmatrix}0\\0\\0\end{smallmatrix}\right]$
* what happens at an error? $y'=y+e$
* use *error syndromes* $He$ to find errors
* *Hamming distance*

---

### QEC

bitflip: 

![width:700](./bitflip.svg)

phaseflip:

![width:700](./phaseflip.svg)

---

### QEC: Shor code

![width:700](./Shore_code.svg)

---

## 🏋️ Exercise
* In groups of two:
  * Choose a quantum algorithm
  * Investigate this specific algorithm
  * Prepare a small presentation, including: 
    * Applications
    * Implementation challenges
    * Classical alternatives

---

## Gezamelijke wrap-up
* What did we learn?
* How will we continue?

---

<!--
color: black
-->
### Next week: Games!

![bg grayscale:1 blur:20px](https://cdn2.psychologytoday.com/assets/styles/manual_crop_1_91_1_1528x800/public/2020-08/shutterstock_1731284125_0.jpg?itok=89UrdUt_)
